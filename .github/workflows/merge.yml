name: Backend CD

on: 
  push:
    tags:
      - 'v[1-9].[0-9].[0-9]-*'


permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  merge:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.script.outputs.result }}

    steps:
      - name: Checkout 
        uses: actions/checkout@v3
      
      - name: Run Script
        id: script
        run: |
          tag=$(echo "${{ github.ref }}" | awk -F"-" '{print $NF}')
          echo "result=$tag" >> $GITHUB_OUTPUT

  CD:
    needs: [merge]
    uses: ./.github/workflows/CD.yml
    with:
      config-path: configure.js
      deploy_env: ${{ needs.merge.outputs.result }}
    secrets:
      envPAT: ${{ secrets.envPAT }}


      

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     role-to-assume: arn:aws:iam::977559609561:role/github_role
      #     aws-region: us-east-1

      # - name: List bucket from s3
      #   run: |
      #     aws s3 ls

      # - name: Get secrets from secrets manager
      #   run: |
      #     aws secretsmanager get-secret-value --secret-id secure_stor_secrets

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: testing
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Build and push Lambda image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: testing
      #     IMAGE_TAG: ${{ github.sha }}
      #     IMAGE_TAG_LATEST: latest
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: ./api
      #     platforms: linux/arm64
      #     file: ./api/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG_LATEST }}
      #       ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
